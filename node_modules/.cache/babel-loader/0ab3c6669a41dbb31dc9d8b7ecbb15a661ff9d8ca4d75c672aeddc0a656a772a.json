{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalPrice: 0,\n  items: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.count + sum;\n      }, 0);\n    },\n    // minusItem(state, action){\n    //     const findItem = state.items.find((obj) => obj.id === action.payload);\n    //     if (findItem){\n    //         findItem.count--;\n    //     }\n    // },\n\n    minusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n      if (findItem.count === 1) {\n        return state.items.filter(items => items.id !== action.payload.id);\n      }\n      return state.items.map(items => items.id === action.payload.id ? {\n        ...items,\n        count: items.count - 1\n      } : items);\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n    clearItems(state) {\n      state.items = [];\n    }\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  minusItem,\n  clearItems\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","totalPrice","items","cartSlice","name","reducers","addItem","state","action","findItem","find","obj","id","payload","count","push","reduce","sum","price","minusItem","filter","map","removeItem","clearItems","actions","reducer"],"sources":["C:/Users/Comp/Desktop/финальный проект/you-meal/src/redux/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    totalPrice: 0,\r\n    items: []\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState,\r\n    reducers: {\r\n        addItem(state, action){\r\n            const findItem = state.items.find((obj) => obj.id === action.payload.id);\r\n\r\n            if(findItem){\r\n                findItem.count++;\r\n            } else {\r\n                state.items.push({\r\n                    ...action.payload,\r\n                    count: 1,\r\n                });\r\n            }\r\n            state.totalPrice = state.items.reduce((sum, obj) => {\r\n                return (obj.price * obj.count) + sum;\r\n            }, 0);\r\n        },\r\n\r\n        // minusItem(state, action){\r\n        //     const findItem = state.items.find((obj) => obj.id === action.payload);\r\n        //     if (findItem){\r\n        //         findItem.count--;\r\n        //     }\r\n        // },\r\n\r\n        minusItem(state, action){\r\n            const findItem = state.items.find((obj) => obj.id === action.payload);\r\n              if (findItem.count === 1) {\r\n                return state.items.filter(items => items.id !== action.payload.id);\r\n              }\r\n            \r\n              return state.items.map(items =>\r\n                items.id === action.payload.id\r\n                  ? { ...items, count: items.count - 1 }\r\n                  : items\r\n              );\r\n\r\n        },\r\n\r\n        removeItem(state, action){\r\n            state.items = state.items.filter((obj) => obj.id !== action.payload)\r\n        },\r\n        clearItems(state){\r\n            state.items = [];\r\n        },\r\n    }\r\n});\r\n\r\nexport const {addItem, removeItem, minusItem, clearItems} = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACNC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAC;MAClB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAExE,IAAGH,QAAQ,EAAC;QACRA,QAAQ,CAACK,KAAK,EAAE;MACpB,CAAC,MAAM;QACHP,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UACb,GAAGP,MAAM,CAACK,OAAO;UACjBC,KAAK,EAAE;QACX,CAAC,CAAC;MACN;MACAP,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEN,GAAG,KAAK;QAChD,OAAQA,GAAG,CAACO,KAAK,GAAGP,GAAG,CAACG,KAAK,GAAIG,GAAG;MACxC,CAAC,EAAE,CAAC,CAAC;IACT,CAAC;IAED;IACA;IACA;IACA;IACA;IACA;;IAEAE,SAASA,CAACZ,KAAK,EAAEC,MAAM,EAAC;MACpB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;MACnE,IAAIJ,QAAQ,CAACK,KAAK,KAAK,CAAC,EAAE;QACxB,OAAOP,KAAK,CAACL,KAAK,CAACkB,MAAM,CAAClB,KAAK,IAAIA,KAAK,CAACU,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACpE;MAEA,OAAOL,KAAK,CAACL,KAAK,CAACmB,GAAG,CAACnB,KAAK,IAC1BA,KAAK,CAACU,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,GAC1B;QAAE,GAAGV,KAAK;QAAEY,KAAK,EAAEZ,KAAK,CAACY,KAAK,GAAG;MAAE,CAAC,GACpCZ,KACN,CAAC;IAEP,CAAC;IAEDoB,UAAUA,CAACf,KAAK,EAAEC,MAAM,EAAC;MACrBD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACkB,MAAM,CAAET,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IACxE,CAAC;IACDU,UAAUA,CAAChB,KAAK,EAAC;MACbA,KAAK,CAACL,KAAK,GAAG,EAAE;IACpB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACI,OAAO;EAAEgB,UAAU;EAAEH,SAAS;EAAEI;AAAU,CAAC,GAAGpB,SAAS,CAACqB,OAAO;AAC7E,eAAerB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}