{"ast":null,"code":"import React from 'react';\nimport MaskFunctions from '../utils/mask';\nvar getExpectedCursorPos = MaskFunctions.getExpectedCursorPos,\n  mask = MaskFunctions.mask,\n  processValue = MaskFunctions.processValue;\nexport var useMask = function (_a) {\n  var _b;\n  var outerValue = _a.outerValue,\n    maskGenerator = _a.maskGenerator,\n    onChange = _a.onChange,\n    getCursorPosition = _a.getCursorPosition,\n    setCursorPosition = _a.setCursorPosition,\n    keepMask = _a.keepMask;\n  var lastOuterValueRef = React.useRef(outerValue);\n  var lastValueRef = React.useRef(outerValue);\n  var lastDisplayValueRef = React.useRef(outerValue);\n  var lastCursorPositionRef = React.useRef((_b = outerValue === null || outerValue === void 0 ? void 0 : outerValue.length) !== null && _b !== void 0 ? _b : 0);\n  var cursorBeforeMaskValueRef = React.useRef(outerValue);\n  var lastWentBackRef = React.useRef(false);\n  var lastMaskRef = React.useRef(maskGenerator);\n  var lastCursorMaskRef = React.useRef(maskGenerator);\n  var _c = React.useState(outerValue),\n    value = _c[0],\n    setValue = _c[1];\n  var _d = React.useState(value),\n    displayValue = _d[0],\n    setDisplayValue = _d[1];\n  var _e = React.useState(displayValue),\n    lastCursorValue = _e[0],\n    setLastCursorValue = _e[1];\n  var _f = React.useState(),\n    lastMaskValue = _f[0],\n    setLastMaskValue = _f[1];\n  var _g = React.useState(false),\n    needUpdateCursor = _g[0],\n    setNeedUpdateCursor = _g[1];\n  var updateDisplayValue = React.useCallback(function (value, userInput) {\n    if (userInput && getCursorPosition) {\n      // Remove static chars after the cursor position to not be duplicated\n      // after the mask is applied (when the mask starts with static chars,\n      // but the user types before those chars, the mask generator will\n      // add the static chars automatically)\n      // See: https://github.com/lucasbasquerotto/react-masked-input/issues/3\n      if (value && maskGenerator) {\n        var cursorPosition_1 = getCursorPosition();\n        var afterStr = cursorPosition_1 <= (value === null || value === void 0 ? void 0 : value.length) ? value === null || value === void 0 ? void 0 : value.substring(cursorPosition_1) : undefined;\n        if (afterStr) {\n          var currentMask = maskGenerator.generateMask(value);\n          var initialStaticChars = '';\n          var idx = 0;\n          var currentChar = currentMask === null || currentMask === void 0 ? void 0 : currentMask.charAt(idx);\n          while (currentChar && !maskGenerator.rules.has(currentChar)) {\n            initialStaticChars += currentChar;\n            idx++;\n            currentChar = currentMask === null || currentMask === void 0 ? void 0 : currentMask.charAt(idx);\n          }\n          if (initialStaticChars) {\n            var startChars = '';\n            var afterChars = initialStaticChars;\n            while (afterChars && value.startsWith(startChars) && !afterStr.startsWith(afterChars)) {\n              startChars += afterChars === null || afterChars === void 0 ? void 0 : afterChars.charAt(0);\n              afterChars = afterChars.substring(1);\n            }\n            if (afterChars && value.startsWith(startChars) && afterStr.startsWith(afterChars)) {\n              value = value.substring(0, cursorPosition_1) + value.substring(cursorPosition_1 + afterChars.length);\n            }\n          }\n        }\n      }\n      // Updates the cursor position when the user types a char\n      var cursorPosition = getCursorPosition();\n      lastCursorPositionRef.current = cursorPosition;\n      cursorBeforeMaskValueRef.current = value;\n      setNeedUpdateCursor(true);\n    }\n    if ((value !== null && value !== void 0 ? value : '').trim() === '') {\n      setDisplayValue('');\n      setValue('');\n      lastMaskRef.current = undefined;\n      return {\n        displayValue: ''\n      };\n    } else if (maskGenerator) {\n      var _a = mask(value, maskGenerator),\n        maskedValue = _a.maskedValue,\n        currentMask = _a.mask,\n        transformOffset = _a.transformOffset;\n      var processedValue = processValue(maskedValue !== null && maskedValue !== void 0 ? maskedValue : '', maskGenerator);\n      setDisplayValue(maskedValue !== null && maskedValue !== void 0 ? maskedValue : undefined);\n      setValue(processedValue !== null && processedValue !== void 0 ? processedValue : undefined);\n      lastMaskRef.current = maskGenerator;\n      if (transformOffset && userInput && getCursorPosition) {\n        var cursorPosition = getCursorPosition();\n        var newCursorPosition = cursorPosition + transformOffset;\n        lastCursorPositionRef.current = newCursorPosition;\n        cursorBeforeMaskValueRef.current = value;\n        setNeedUpdateCursor(true);\n      }\n      return {\n        displayValue: maskedValue,\n        mask: currentMask\n      };\n    } else {\n      setDisplayValue(value);\n      setValue(value);\n      lastMaskRef.current = undefined;\n      return {\n        displayValue: value\n      };\n    }\n  }, [maskGenerator, getCursorPosition]);\n  var updateCursor = React.useCallback(function (_a) {\n    var _b;\n    var displayValue = _a.displayValue,\n      oldDisplayValue = _a.oldDisplayValue,\n      newMask = _a.newMask,\n      oldMask = _a.oldMask,\n      force = _a.force;\n    if (setCursorPosition && getCursorPosition) {\n      var _c = getExpectedCursorPos({\n          displayValue: displayValue,\n          oldDisplayValue: oldDisplayValue,\n          valueBeforeMask: (_b = cursorBeforeMaskValueRef.current) !== null && _b !== void 0 ? _b : '',\n          newMask: newMask,\n          oldMask: oldMask,\n          cursorPosition: lastCursorPositionRef.current,\n          lastWentBack: lastWentBackRef.current\n        }),\n        newExpectedCursorPos = _c.position,\n        _d = _c.wentBack,\n        wentBack = _d === void 0 ? false : _d;\n      if (force || lastCursorPositionRef.current !== newExpectedCursorPos) {\n        lastCursorPositionRef.current = newExpectedCursorPos;\n        setCursorPosition(newExpectedCursorPos);\n      }\n      lastWentBackRef.current = wentBack;\n    }\n  }, [setCursorPosition, getCursorPosition]);\n  React.useEffect(function () {\n    var maskValue = (maskGenerator === null || maskGenerator === void 0 ? void 0 : maskGenerator.generateMask) && (maskGenerator === null || maskGenerator === void 0 ? void 0 : maskGenerator.generateMask(value !== null && value !== void 0 ? value : '')) || undefined;\n    if (maskValue !== lastMaskValue || outerValue !== lastOuterValueRef.current) {\n      setLastMaskValue(maskValue);\n      lastOuterValueRef.current = outerValue;\n      if (maskValue !== lastMaskValue || outerValue !== value) {\n        updateDisplayValue(outerValue !== null && outerValue !== void 0 ? outerValue : '');\n      }\n    }\n  }, [lastMaskValue, setLastMaskValue, maskGenerator, outerValue, value, updateDisplayValue]);\n  React.useEffect(function () {\n    if (value !== lastValueRef.current) {\n      lastValueRef.current = value;\n      updateDisplayValue(value !== null && value !== void 0 ? value : '');\n      if (!keepMask && onChange) {\n        onChange(value !== null && value !== void 0 ? value : '');\n      }\n    }\n  }, [value, maskGenerator, updateDisplayValue, keepMask, onChange]);\n  React.useEffect(function () {\n    if (displayValue !== lastDisplayValueRef.current) {\n      var newDisplayValue = updateDisplayValue(displayValue !== null && displayValue !== void 0 ? displayValue : '').displayValue;\n      if ((newDisplayValue !== null && newDisplayValue !== void 0 ? newDisplayValue : '') === (displayValue !== null && displayValue !== void 0 ? displayValue : '')) {\n        lastDisplayValueRef.current = newDisplayValue !== null && newDisplayValue !== void 0 ? newDisplayValue : undefined;\n        if (keepMask && onChange) {\n          onChange(newDisplayValue !== null && newDisplayValue !== void 0 ? newDisplayValue : '');\n        }\n      }\n    }\n  }, [displayValue, updateDisplayValue, keepMask, onChange]);\n  React.useEffect(function () {\n    var _a;\n    var newPos = getCursorPosition ? getCursorPosition() : lastCursorPositionRef.current;\n    var force = newPos !== lastCursorPositionRef.current;\n    if (displayValue === lastDisplayValueRef.current && (lastCursorValue !== lastDisplayValueRef.current || force || needUpdateCursor)) {\n      setNeedUpdateCursor(false);\n      setLastCursorValue(lastDisplayValueRef.current);\n      lastCursorMaskRef.current = lastMaskRef.current;\n      updateCursor({\n        displayValue: (_a = lastDisplayValueRef.current) !== null && _a !== void 0 ? _a : '',\n        oldDisplayValue: lastCursorValue !== null && lastCursorValue !== void 0 ? lastCursorValue : '',\n        newMask: lastMaskRef.current,\n        oldMask: lastCursorMaskRef.current,\n        force: force\n      });\n    }\n  }, [lastCursorValue, displayValue, needUpdateCursor, getCursorPosition, updateCursor]);\n  var result = React.useMemo(function () {\n    return {\n      displayValue: displayValue,\n      setDisplayValue: function (value) {\n        updateDisplayValue(value, true);\n      }\n    };\n  }, [displayValue, updateDisplayValue]);\n  return result;\n};","map":{"version":3,"names":["React","MaskFunctions","getExpectedCursorPos","mask","processValue","useMask","_a","outerValue","maskGenerator","onChange","getCursorPosition","setCursorPosition","keepMask","lastOuterValueRef","useRef","lastValueRef","lastDisplayValueRef","lastCursorPositionRef","_b","length","cursorBeforeMaskValueRef","lastWentBackRef","lastMaskRef","lastCursorMaskRef","_c","useState","value","setValue","_d","displayValue","setDisplayValue","_e","lastCursorValue","setLastCursorValue","_f","lastMaskValue","setLastMaskValue","_g","needUpdateCursor","setNeedUpdateCursor","updateDisplayValue","useCallback","userInput","cursorPosition_1","afterStr","substring","undefined","currentMask","generateMask","initialStaticChars","idx","currentChar","charAt","rules","has","startChars","afterChars","startsWith","cursorPosition","current","trim","maskedValue","transformOffset","processedValue","newCursorPosition","updateCursor","oldDisplayValue","newMask","oldMask","force","valueBeforeMask","lastWentBack","newExpectedCursorPos","position","wentBack","useEffect","maskValue","newDisplayValue","newPos","result","useMemo"],"sources":["../../../src/hooks/use-mask.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,eAAe;AAGjC,IAAAC,oBAAoB,GAAyBD,aAAa,CAAAC,oBAAtC;EAAEC,IAAI,GAAmBF,aAAa,CAAAE,IAAhC;EAAEC,YAAY,GAAKH,aAAa,CAAAG,YAAlB;AAWhD,OAAO,IAAMC,OAAO,GAAG,SAAAA,CAACC,EAOT;;MANdC,UAAU,GAAAD,EAAA,CAAAC,UAAA;IACVC,aAAa,GAAAF,EAAA,CAAAE,aAAA;IACbC,QAAQ,GAAAH,EAAA,CAAAG,QAAA;IACRC,iBAAiB,GAAAJ,EAAA,CAAAI,iBAAA;IACjBC,iBAAiB,GAAAL,EAAA,CAAAK,iBAAA;IACjBC,QAAQ,GAAAN,EAAA,CAAAM,QAAA;EAER,IAAMC,iBAAiB,GAAGb,KAAK,CAACc,MAAM,CAACP,UAAU,CAAC;EAClD,IAAMQ,YAAY,GAAGf,KAAK,CAACc,MAAM,CAACP,UAAU,CAAC;EAC7C,IAAMS,mBAAmB,GAAGhB,KAAK,CAACc,MAAM,CAACP,UAAU,CAAC;EACpD,IAAMU,qBAAqB,GAAGjB,KAAK,CAACc,MAAM,CAAC,CAAAI,EAAA,GAAAX,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEY,MAAM,cAAAD,EAAA,cAAAA,EAAA,GAAI,CAAC,CAAC;EACnE,IAAME,wBAAwB,GAAGpB,KAAK,CAACc,MAAM,CAACP,UAAU,CAAC;EACzD,IAAMc,eAAe,GAAGrB,KAAK,CAACc,MAAM,CAAC,KAAK,CAAC;EAC3C,IAAMQ,WAAW,GAAGtB,KAAK,CAACc,MAAM,CAACN,aAAa,CAAC;EAC/C,IAAMe,iBAAiB,GAAGvB,KAAK,CAACc,MAAM,CAACN,aAAa,CAAC;EAE/C,IAAAgB,EAAA,GAAoBxB,KAAK,CAACyB,QAAQ,CAAClB,UAAU,CAAC;IAA7CmB,KAAK,GAAAF,EAAA;IAAEG,QAAQ,GAAAH,EAAA,GAA8B;EAC9C,IAAAI,EAAA,GAAkC5B,KAAK,CAACyB,QAAQ,CAACC,KAAK,CAAC;IAAtDG,YAAY,GAAAD,EAAA;IAAEE,eAAe,GAAAF,EAAA,GAAyB;EACvD,IAAAG,EAAA,GAAwC/B,KAAK,CAACyB,QAAQ,CAACI,YAAY,CAAC;IAAnEG,eAAe,GAAAD,EAAA;IAAEE,kBAAkB,GAAAF,EAAA,GAAgC;EACpE,IAAAG,EAAA,GAAoClC,KAAK,CAACyB,QAAQ,EAErD;IAFIU,aAAa,GAAAD,EAAA;IAAEE,gBAAgB,GAAAF,EAAA,GAEnC;EACG,IAAAG,EAAA,GAA0CrC,KAAK,CAACyB,QAAQ,CAAC,KAAK,CAAC;IAA9Da,gBAAgB,GAAAD,EAAA;IAAEE,mBAAmB,GAAAF,EAAA,GAAyB;EAErE,IAAMG,kBAAkB,GAAGxC,KAAK,CAACyC,WAAW,CAC3C,UAACf,KAAa,EAAEgB,SAAmB;IAClC,IAAIA,SAAS,IAAIhC,iBAAiB,EAAE;MACnC;MACA;MACA;MACA;MACA;MACA,IAAIgB,KAAK,IAAIlB,aAAa,EAAE;QAC3B,IAAMmC,gBAAc,GAAGjC,iBAAiB,EAAE;QAC1C,IAAMkC,QAAQ,GACbD,gBAAc,KAAIjB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEP,MAAM,IAC5BO,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,SAAS,CAACF,gBAAc,CAAC,GAChCG,SAAS;QAEb,IAAIF,QAAQ,EAAE;UACb,IAAMG,WAAW,GAAGvC,aAAa,CAACwC,YAAY,CAACtB,KAAK,CAAC;UACrD,IAAIuB,kBAAkB,GAAG,EAAE;UAC3B,IAAIC,GAAG,GAAG,CAAC;UACX,IAAIC,WAAW,GAAGJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEK,MAAM,CAACF,GAAG,CAAC;UAE1C,OAAOC,WAAW,IAAI,CAAC3C,aAAa,CAAC6C,KAAK,CAACC,GAAG,CAACH,WAAW,CAAC,EAAE;YAC5DF,kBAAkB,IAAIE,WAAW;YACjCD,GAAG,EAAE;YACLC,WAAW,GAAGJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEK,MAAM,CAACF,GAAG,CAAC;;UAGvC,IAAID,kBAAkB,EAAE;YACvB,IAAIM,UAAU,GAAG,EAAE;YACnB,IAAIC,UAAU,GAAGP,kBAAkB;YAEnC,OACCO,UAAU,IACV9B,KAAK,CAAC+B,UAAU,CAACF,UAAU,CAAC,IAC5B,CAACX,QAAQ,CAACa,UAAU,CAACD,UAAU,CAAC,EAC/B;cACDD,UAAU,IAAIC,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEJ,MAAM,CAAC,CAAC,CAAC;cACnCI,UAAU,GAAGA,UAAU,CAACX,SAAS,CAAC,CAAC,CAAC;;YAGrC,IACCW,UAAU,IACV9B,KAAK,CAAC+B,UAAU,CAACF,UAAU,CAAC,IAC5BX,QAAQ,CAACa,UAAU,CAACD,UAAU,CAAC,EAC9B;cACD9B,KAAK,GACJA,KAAK,CAACmB,SAAS,CAAC,CAAC,EAAEF,gBAAc,CAAC,GAClCjB,KAAK,CAACmB,SAAS,CAACF,gBAAc,GAAGa,UAAU,CAACrC,MAAM,CAAC;;;;;MAMxD;MACA,IAAMuC,cAAc,GAAGhD,iBAAiB,EAAE;MAC1CO,qBAAqB,CAAC0C,OAAO,GAAGD,cAAc;MAC9CtC,wBAAwB,CAACuC,OAAO,GAAGjC,KAAK;MACxCa,mBAAmB,CAAC,IAAI,CAAC;;IAG1B,IAAI,CAACb,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,EAAE,EAAEkC,IAAI,EAAE,KAAK,EAAE,EAAE;MAChC9B,eAAe,CAAC,EAAE,CAAC;MACnBH,QAAQ,CAAC,EAAE,CAAC;MACZL,WAAW,CAACqC,OAAO,GAAGb,SAAS;MAC/B,OAAO;QAAEjB,YAAY,EAAE;MAAE,CAAE;KAC3B,MAAM,IAAIrB,aAAa,EAAE;MACnB,IAAAF,EAAA,GAIFH,IAAI,CAACuB,KAAK,EAAElB,aAAa,CAAC;QAH7BqD,WAAW,GAAAvD,EAAA,CAAAuD,WAAA;QACLd,WAAW,GAAAzC,EAAA,CAAAH,IAAA;QACjB2D,eAAe,GAAAxD,EAAA,CAAAwD,eACc;MAC9B,IAAMC,cAAc,GAAG3D,YAAY,CAACyD,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAI,EAAE,EAAErD,aAAa,CAAC;MAErEsB,eAAe,CAAC+B,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAIf,SAAS,CAAC;MACzCnB,QAAQ,CAACoC,cAAc,aAAdA,cAAc,cAAdA,cAAc,GAAIjB,SAAS,CAAC;MACrCxB,WAAW,CAACqC,OAAO,GAAGnD,aAAa;MAEnC,IAAIsD,eAAe,IAAIpB,SAAS,IAAIhC,iBAAiB,EAAE;QACtD,IAAMgD,cAAc,GAAGhD,iBAAiB,EAAE;QAC1C,IAAMsD,iBAAiB,GAAGN,cAAc,GAAGI,eAAe;QAC1D7C,qBAAqB,CAAC0C,OAAO,GAAGK,iBAAiB;QACjD5C,wBAAwB,CAACuC,OAAO,GAAGjC,KAAK;QACxCa,mBAAmB,CAAC,IAAI,CAAC;;MAG1B,OAAO;QAAEV,YAAY,EAAEgC,WAAW;QAAE1D,IAAI,EAAE4C;MAAW,CAAE;KACvD,MAAM;MACNjB,eAAe,CAACJ,KAAK,CAAC;MACtBC,QAAQ,CAACD,KAAK,CAAC;MACfJ,WAAW,CAACqC,OAAO,GAAGb,SAAS;MAC/B,OAAO;QAAEjB,YAAY,EAAEH;MAAK,CAAE;;EAEhC,CAAC,EACD,CAAClB,aAAa,EAAEE,iBAAiB,CAAC,CAClC;EAED,IAAMuD,YAAY,GAAGjE,KAAK,CAACyC,WAAW,CACrC,UAACnC,EAYA;;QAXAuB,YAAY,GAAAvB,EAAA,CAAAuB,YAAA;MACZqC,eAAe,GAAA5D,EAAA,CAAA4D,eAAA;MACfC,OAAO,GAAA7D,EAAA,CAAA6D,OAAA;MACPC,OAAO,GAAA9D,EAAA,CAAA8D,OAAA;MACPC,KAAK,GAAA/D,EAAA,CAAA+D,KAAA;IAQL,IAAI1D,iBAAiB,IAAID,iBAAiB,EAAE;MACvC,IAAAc,EAAA,GACHtB,oBAAoB,CAAC;UACpB2B,YAAY,EAAAA,YAAA;UACZqC,eAAe,EAAAA,eAAA;UACfI,eAAe,EAAE,CAAApD,EAAA,GAAAE,wBAAwB,CAACuC,OAAO,cAAAzC,EAAA,cAAAA,EAAA,GAAI,EAAE;UACvDiD,OAAO,EAAAA,OAAA;UACPC,OAAO,EAAAA,OAAA;UACPV,cAAc,EAAEzC,qBAAqB,CAAC0C,OAAO;UAC7CY,YAAY,EAAElD,eAAe,CAACsC;SAC9B,CAAC;QATaa,oBAAoB,GAAAhD,EAAA,CAAAiD,QAAA;QAAE7C,EAAA,GAAAJ,EAAA,CAAAkD,QAAgB;QAAhBA,QAAQ,GAAA9C,EAAA,cAAG,KAAK,GAAAA,EASnD;MAEH,IAAIyC,KAAK,IAAIpD,qBAAqB,CAAC0C,OAAO,KAAKa,oBAAoB,EAAE;QACpEvD,qBAAqB,CAAC0C,OAAO,GAAGa,oBAAoB;QACpD7D,iBAAiB,CAAC6D,oBAAoB,CAAC;;MAGxCnD,eAAe,CAACsC,OAAO,GAAGe,QAAQ;;EAEpC,CAAC,EACD,CAAC/D,iBAAiB,EAAED,iBAAiB,CAAC,CACtC;EAEDV,KAAK,CAAC2E,SAAS,CAAC;IACf,IAAMC,SAAS,GACb,CAAApE,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEwC,YAAY,MAC3BxC,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEwC,YAAY,CAACtB,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,EAAE,CAAC,KACzCoB,SAAS;IAEV,IACC8B,SAAS,KAAKzC,aAAa,IAC3B5B,UAAU,KAAKM,iBAAiB,CAAC8C,OAAO,EACvC;MACDvB,gBAAgB,CAACwC,SAAS,CAAC;MAC3B/D,iBAAiB,CAAC8C,OAAO,GAAGpD,UAAU;MAEtC,IAAIqE,SAAS,KAAKzC,aAAa,IAAI5B,UAAU,KAAKmB,KAAK,EAAE;QACxDc,kBAAkB,CAACjC,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAI,EAAE,CAAC;;;EAGvC,CAAC,EAAE,CACF4B,aAAa,EACbC,gBAAgB,EAChB5B,aAAa,EACbD,UAAU,EACVmB,KAAK,EACLc,kBAAkB,CAClB,CAAC;EAEFxC,KAAK,CAAC2E,SAAS,CAAC;IACf,IAAIjD,KAAK,KAAKX,YAAY,CAAC4C,OAAO,EAAE;MACnC5C,YAAY,CAAC4C,OAAO,GAAGjC,KAAK;MAC5Bc,kBAAkB,CAACd,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,EAAE,CAAC;MAE/B,IAAI,CAACd,QAAQ,IAAIH,QAAQ,EAAE;QAC1BA,QAAQ,CAACiB,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,EAAE,CAAC;;;EAGxB,CAAC,EAAE,CAACA,KAAK,EAAElB,aAAa,EAAEgC,kBAAkB,EAAE5B,QAAQ,EAAEH,QAAQ,CAAC,CAAC;EAElET,KAAK,CAAC2E,SAAS,CAAC;IACf,IAAI9C,YAAY,KAAKb,mBAAmB,CAAC2C,OAAO,EAAE;MACzC,IAAckB,eAAe,GAAKrC,kBAAkB,CAC3DX,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAI,EAAE,CAClB,CAAAA,YAFoC;MAIrC,IAAI,CAACgD,eAAe,aAAfA,eAAe,cAAfA,eAAe,GAAI,EAAE,OAAOhD,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAI,EAAE,CAAC,EAAE;QACrDb,mBAAmB,CAAC2C,OAAO,GAAGkB,eAAe,aAAfA,eAAe,cAAfA,eAAe,GAAI/B,SAAS;QAE1D,IAAIlC,QAAQ,IAAIH,QAAQ,EAAE;UACzBA,QAAQ,CAACoE,eAAe,aAAfA,eAAe,cAAfA,eAAe,GAAI,EAAE,CAAC;;;;EAInC,CAAC,EAAE,CAAChD,YAAY,EAAEW,kBAAkB,EAAE5B,QAAQ,EAAEH,QAAQ,CAAC,CAAC;EAE1DT,KAAK,CAAC2E,SAAS,CAAC;;IACf,IAAMG,MAAM,GAAGpE,iBAAiB,GAC7BA,iBAAiB,EAAE,GACnBO,qBAAqB,CAAC0C,OAAO;IAChC,IAAMU,KAAK,GAAGS,MAAM,KAAK7D,qBAAqB,CAAC0C,OAAO;IAEtD,IACC9B,YAAY,KAAKb,mBAAmB,CAAC2C,OAAO,KAC3C3B,eAAe,KAAKhB,mBAAmB,CAAC2C,OAAO,IAC/CU,KAAK,IACL/B,gBAAgB,CAAC,EACjB;MACDC,mBAAmB,CAAC,KAAK,CAAC;MAC1BN,kBAAkB,CAACjB,mBAAmB,CAAC2C,OAAO,CAAC;MAC/CpC,iBAAiB,CAACoC,OAAO,GAAGrC,WAAW,CAACqC,OAAO;MAE/CM,YAAY,CAAC;QACZpC,YAAY,EAAE,CAAAvB,EAAA,GAAAU,mBAAmB,CAAC2C,OAAO,cAAArD,EAAA,cAAAA,EAAA,GAAI,EAAE;QAC/C4D,eAAe,EAAElC,eAAe,aAAfA,eAAe,cAAfA,eAAe,GAAI,EAAE;QACtCmC,OAAO,EAAE7C,WAAW,CAACqC,OAAO;QAC5BS,OAAO,EAAE7C,iBAAiB,CAACoC,OAAO;QAClCU,KAAK,EAAAA;OACL,CAAC;;EAEJ,CAAC,EAAE,CACFrC,eAAe,EACfH,YAAY,EACZS,gBAAgB,EAChB5B,iBAAiB,EACjBuD,YAAY,CACZ,CAAC;EAEF,IAAMc,MAAM,GAAG/E,KAAK,CAACgF,OAAO,CAC3B;IAAM,OAAC;MACNnD,YAAY,EAAAA,YAAA;MACZC,eAAe,EAAE,SAAAA,CAACJ,KAAa;QAC9Bc,kBAAkB,CAACd,KAAK,EAAE,IAAI,CAAC;MAChC;KACA;EALK,CAKJ,EACF,CAACG,YAAY,EAAEW,kBAAkB,CAAC,CAClC;EAED,OAAOuC,MAAM;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}