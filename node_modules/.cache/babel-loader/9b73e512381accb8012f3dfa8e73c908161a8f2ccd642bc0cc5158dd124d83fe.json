{"ast":null,"code":"import React from 'react';\nimport { useMask } from './use-mask';\nvar useCombinedRefs = function (innerRef, fwdRef) {\n  React.useEffect(function () {\n    [innerRef, fwdRef].forEach(function (ref) {\n      if (ref) {\n        if (typeof ref === 'function') {\n          ref(innerRef.current || null);\n        } else {\n          ref.current = innerRef.current || null;\n        }\n      }\n    });\n  }, [innerRef, fwdRef]);\n  return innerRef;\n};\nexport var useRefMask = function (_a) {\n  var maskGenerator = _a.maskGenerator,\n    outerValue = _a.value,\n    onChange = _a.onChange,\n    keepMask = _a.keepMask,\n    ref = _a.ref,\n    getCursorPositionOuter = _a.getCursorPosition,\n    setCursorPositionOuter = _a.setCursorPosition;\n  var innerRef = React.useRef(null);\n  var combinedRefs = useCombinedRefs(innerRef, ref);\n  var getCursorPosition = React.useCallback(function () {\n    var el = combinedRefs === null || combinedRefs === void 0 ? void 0 : combinedRefs.current;\n    return getCursorPositionOuter(el !== null && el !== void 0 ? el : undefined);\n  }, [combinedRefs, getCursorPositionOuter]);\n  var setCursorPosition = React.useCallback(function (cursorPosition) {\n    var el = combinedRefs === null || combinedRefs === void 0 ? void 0 : combinedRefs.current;\n    setCursorPositionOuter(cursorPosition, el !== null && el !== void 0 ? el : undefined);\n  }, [combinedRefs, setCursorPositionOuter]);\n  var _b = useMask({\n      outerValue: outerValue,\n      maskGenerator: maskGenerator,\n      getCursorPosition: getCursorPosition,\n      setCursorPosition: setCursorPosition,\n      onChange: onChange,\n      keepMask: keepMask\n    }),\n    displayValue = _b.displayValue,\n    setDisplayValue = _b.setDisplayValue;\n  return {\n    displayValue: displayValue,\n    setDisplayValue: setDisplayValue,\n    ref: combinedRefs\n  };\n};","map":{"version":3,"names":["React","useMask","useCombinedRefs","innerRef","fwdRef","useEffect","forEach","ref","current","useRefMask","_a","maskGenerator","outerValue","value","onChange","keepMask","getCursorPositionOuter","getCursorPosition","setCursorPositionOuter","setCursorPosition","useRef","combinedRefs","useCallback","el","undefined","cursorPosition","_b","displayValue","setDisplayValue"],"sources":["../../../src/hooks/use-ref-mask.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,YAAY;AAGpC,IAAMC,eAAe,GAAG,SAAAA,CACvBC,QAA0C,EAC1CC,MAAyC;EAEzCJ,KAAK,CAACK,SAAS,CAAC;IACf,CAACF,QAAQ,EAAEC,MAAM,CAAC,CAACE,OAAO,CAAC,UAACC,GAAG;MAC9B,IAAIA,GAAG,EAAE;QACR,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;UAC9BA,GAAG,CAACJ,QAAQ,CAACK,OAAO,IAAI,IAAI,CAAC;SAC7B,MAAM;UACND,GAAG,CAACC,OAAO,GAAGL,QAAQ,CAACK,OAAO,IAAI,IAAI;;;IAGzC,CAAC,CAAC;EACH,CAAC,EAAE,CAACL,QAAQ,EAAEC,MAAM,CAAC,CAAC;EAEtB,OAAOD,QAAQ;AAChB,CAAC;AAYD,OAAO,IAAMM,UAAU,GAAG,SAAAA,CAAIC,EAQT;MAPpBC,aAAa,GAAAD,EAAA,CAAAC,aAAA;IACNC,UAAU,GAAAF,EAAA,CAAAG,KAAA;IACjBC,QAAQ,GAAAJ,EAAA,CAAAI,QAAA;IACRC,QAAQ,GAAAL,EAAA,CAAAK,QAAA;IACRR,GAAG,GAAAG,EAAA,CAAAH,GAAA;IACgBS,sBAAsB,GAAAN,EAAA,CAAAO,iBAAA;IACtBC,sBAAsB,GAAAR,EAAA,CAAAS,iBAAA;EAEzC,IAAMhB,QAAQ,GAAGH,KAAK,CAACoB,MAAM,CAAI,IAAI,CAAC;EACtC,IAAMC,YAAY,GAAGnB,eAAe,CAACC,QAAQ,EAAEI,GAAG,CAAC;EAEnD,IAAMU,iBAAiB,GAAGjB,KAAK,CAACsB,WAAW,CAAC;IAC3C,IAAMC,EAAE,GAAGF,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEb,OAAO;IAChC,OAAOQ,sBAAsB,CAACO,EAAE,aAAFA,EAAE,cAAFA,EAAE,GAAIC,SAAS,CAAC;EAC/C,CAAC,EAAE,CAACH,YAAY,EAAEL,sBAAsB,CAAC,CAAC;EAE1C,IAAMG,iBAAiB,GAAGnB,KAAK,CAACsB,WAAW,CAC1C,UAACG,cAAsB;IACtB,IAAMF,EAAE,GAAGF,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEb,OAAO;IAChCU,sBAAsB,CAACO,cAAc,EAAEF,EAAE,aAAFA,EAAE,cAAFA,EAAE,GAAIC,SAAS,CAAC;EACxD,CAAC,EACD,CAACH,YAAY,EAAEH,sBAAsB,CAAC,CACtC;EAEK,IAAAQ,EAAA,GAAoCzB,OAAO,CAAC;MACjDW,UAAU,EAAAA,UAAA;MACVD,aAAa,EAAAA,aAAA;MACbM,iBAAiB,EAAAA,iBAAA;MACjBE,iBAAiB,EAAAA,iBAAA;MACjBL,QAAQ,EAAAA,QAAA;MACRC,QAAQ,EAAAA;KACR,CAAC;IAPMY,YAAY,GAAAD,EAAA,CAAAC,YAAA;IAAEC,eAAe,GAAAF,EAAA,CAAAE,eAOnC;EAEF,OAAO;IAAED,YAAY,EAAAA,YAAA;IAAEC,eAAe,EAAAA,eAAA;IAAErB,GAAG,EAAEc;EAAY,CAAE;AAC5D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}