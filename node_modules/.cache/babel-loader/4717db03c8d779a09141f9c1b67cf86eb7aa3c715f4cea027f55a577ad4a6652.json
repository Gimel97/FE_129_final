{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Comp\\\\Desktop\\\\\\u0444\\u0438\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\\\you-meal\\\\src\\\\components\\\\ModalOrder\\\\ModalOrder.js\",\n  _s = $RefreshSig$();\nimport Modal from 'react-modal';\nimport styles from './ModalOrder.module.css';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport Form from '../Form/Form';\nimport ArrangeBtn from '../ArrangeBtn/ArrangeBtn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalOrder = _ref => {\n  _s();\n  let {\n    Open,\n    Close\n  } = _ref;\n  const [formIsSubmitted, setFormIsSubmited] = useState(false);\n  const submitForm = () => {\n    setFormIsSubmited(true);\n  };\n  // const dispatch = useDispatch();\n  // const [showAddress, setshowAddress] = useState(false);\n  // const [checked, setChecked] = useState(true);\n  // const [name, setName] = useState('');\n  // const [phone, setPhone] = useState('');\n  // const [address, setAddress] = useState('');\n  // const [floor, setFloor] = useState('');\n  // const [intercom, setIntercom] = useState('');\n  // const handleFormSubmit = (event) => {\n  //     event.preventDefault();\n  // }\n\n  // const setButton = (e) => {\n  //     e.preventDefault;\n  //     console.log({name, phone, address, floor, intercom})\n  // }\n\n  // function changeCheckbox() {\n  //     setChecked(!checked);\n  // }\n\n  //    let content = null;\n\n  //    if (showAddress){\n  //     content = <>\n  //     <form className={styles.address}>\n  //             <input className={styles.basic} type=\"text\" placeholder='Улица, дом, квартира' onChange={e => setAddress(e.target.value)} value={address}/>\n  //             <form className={styles.optionally}>\n  //                 <input  className={styles.basic_optionally} type=\"text\" placeholder='Этаж' onChange={e => setFloor(e.target.value)} value={floor}/>\n  //                 <input className={styles.basic_optionally} type=\"text\" placeholder='Домофон' onChange={e => setIntercom(e.target.value)} value={intercom}/>\n  //             </form>\n  //         </form>\n  //     </>\n  //    }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: Open,\n    onRequestClose: Close,\n    className: styles.overlay,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: !formIsSubmitted ? /*#__PURE__*/_jsxDEV(Form, {\n        submitForm: submitForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(ArrangeBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 67\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: Close,\n        src: \"./images/close.svg\",\n        className: styles.closeBtn,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.contentLeft,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.donut,\n          src: \"./images/donut.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.contentRight,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: styles.title,\n          children: \"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalOrder, \"b2JMnMoVLRbLG9TcMF1LijSydEk=\");\n_c = ModalOrder;\nexport default ModalOrder;\nvar _c;\n$RefreshReg$(_c, \"ModalOrder\");","map":{"version":3,"names":["Modal","styles","useDispatch","useState","Form","ArrangeBtn","jsxDEV","_jsxDEV","ModalOrder","_ref","_s","Open","Close","formIsSubmitted","setFormIsSubmited","submitForm","isOpen","onRequestClose","className","overlay","children","fileName","_jsxFileName","lineNumber","columnNumber","modalContainer","onClick","src","closeBtn","alt","contentLeft","donut","contentRight","title","_c","$RefreshReg$"],"sources":["C:/Users/Comp/Desktop/финальный проект/you-meal/src/components/ModalOrder/ModalOrder.js"],"sourcesContent":["import Modal from 'react-modal';\r\nimport styles from './ModalOrder.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport Form from '../Form/Form';\r\nimport ArrangeBtn from '../ArrangeBtn/ArrangeBtn';\r\n\r\nconst  ModalOrder = ({Open, Close}) => {\r\n    const [formIsSubmitted, setFormIsSubmited] = useState(false);\r\n    const submitForm = () => {\r\n        setFormIsSubmited(true)\r\n    }\r\n    // const dispatch = useDispatch();\r\n    // const [showAddress, setshowAddress] = useState(false);\r\n    // const [checked, setChecked] = useState(true);\r\n    // const [name, setName] = useState('');\r\n    // const [phone, setPhone] = useState('');\r\n    // const [address, setAddress] = useState('');\r\n    // const [floor, setFloor] = useState('');\r\n    // const [intercom, setIntercom] = useState('');\r\n    // const handleFormSubmit = (event) => {\r\n    //     event.preventDefault();\r\n    // }\r\n\r\n    // const setButton = (e) => {\r\n    //     e.preventDefault;\r\n    //     console.log({name, phone, address, floor, intercom})\r\n    // }\r\n\r\n    // function changeCheckbox() {\r\n    //     setChecked(!checked);\r\n    // }\r\n\r\n//    let content = null;\r\n\r\n//    if (showAddress){\r\n//     content = <>\r\n//     <form className={styles.address}>\r\n//             <input className={styles.basic} type=\"text\" placeholder='Улица, дом, квартира' onChange={e => setAddress(e.target.value)} value={address}/>\r\n//             <form className={styles.optionally}>\r\n//                 <input  className={styles.basic_optionally} type=\"text\" placeholder='Этаж' onChange={e => setFloor(e.target.value)} value={floor}/>\r\n//                 <input className={styles.basic_optionally} type=\"text\" placeholder='Домофон' onChange={e => setIntercom(e.target.value)} value={intercom}/>\r\n//             </form>\r\n//         </form>\r\n//     </>\r\n//    }\r\n\r\n   \r\n    \r\nreturn(\r\n    <Modal\r\n    isOpen={Open}\r\n    onRequestClose={Close}\r\n    className={styles.overlay}\r\n    >\r\n        <div>\r\n            {!formIsSubmitted ? <Form submitForm={submitForm}/> : <ArrangeBtn />}\r\n        </div>\r\n        <div className={styles.modalContainer}>\r\n            <img onClick={Close} src=\"./images/close.svg\" className={styles.closeBtn} alt=\"\" />\r\n            <div className={styles.contentLeft}>\r\n                <img className={styles.donut} src=\"./images/donut.svg\" alt=\"\" />\r\n            </div>\r\n            <div className={styles.contentRight}>\r\n\r\n                <h4 className={styles.title}>Доставка</h4>\r\n                {/* <div className={styles.forms}> */}\r\n                <Form />\r\n                \r\n                   {/*  <form className={styles.basic}>\r\n                        <input className={styles.basic} type=\"text\" placeholder='Ваше имя' onChange={e => setName(e.target.value)} value={name}/>\r\n                        <input className={styles.basic} type=\"phone\" placeholder='Телефон' onChange={e => setPhone(e.target.value)} value={phone}/>\r\n                    </form>\r\n                    <div onClick={() => setshowAddress(false)} className={styles.delivery}>\r\n                        <label className={styles.label}>\r\n                            <input type=\"radio\" checked={checked} onChange={changeCheckbox} name=\"delivery\" value=\"pickup\" className={styles.radio} />\r\n                            <span className={styles.fake}></span>\r\n                            <span className={styles.text}>Самовывоз</span> </label>\r\n                    </div>\r\n                    <div onClick={() => setshowAddress(true)} className={styles.delivery}>\r\n                        <label className={styles.label}>\r\n                            <input onChange={changeCheckbox} type=\"radio\" name=\"delivery\" value=\"delivery\" className={styles.radio} />\r\n                            <span className={styles.fake}></span>\r\n                            <span className={styles.text}>Доставка</span></label>\r\n                    </div>\r\n                    {content} */}\r\n\r\n\r\n        {/* <form className={styles.address}>\r\n            <input className={styles.basic} type=\"text\" placeholder='Улица, дом, квартира'/>\r\n            <form className={styles.optionally}>\r\n                <input className={styles.basic_optionally} type=\"text\" placeholder='Этаж'/>\r\n                <input className={styles.basic_optionally} type=\"text\" placeholder='Домофон'/>\r\n            </form>\r\n        </form> */}\r\n        {/* onClick={e => setButton(e)} */}\r\n        \r\n                {/* </div>\r\n                <div className={styles.arrange}>\r\n                    <button onClick={handleFormSubmit} className={styles.arrangeBtn}>Оформить</button>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    </Modal>\r\n)}\r\n\r\nexport default ModalOrder;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}