{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport MaskFunctions from './mask';\nexport var DEFAULT_MASK_RULES = new Map([['A', /[A-Za-z]/], ['9', /\\d/], ['?', /\\w/]]);\n// Helper functions\nexport var mask = function (value, maskGenerator) {\n  var _a, _b;\n  return (_b = (_a = MaskFunctions.mask(value, maskGenerator)) === null || _a === void 0 ? void 0 : _a.maskedValue) !== null && _b !== void 0 ? _b : '';\n};\nexport var createDefaultMaskGenerator = function (mask) {\n  return {\n    rules: DEFAULT_MASK_RULES,\n    generateMask: function () {\n      return mask;\n    }\n  };\n};\nvar onlyDigits = function (value) {\n  var onlyDigits = value != null ? value.replace(/\\D/g, '') : null;\n  return onlyDigits;\n};\nvar hasMoreDigits = function (v01, v02) {\n  var _a, _b;\n  var d01 = onlyDigits(v01);\n  var d02 = onlyDigits(v02);\n  var len01 = (_a = d01 === null || d01 === void 0 ? void 0 : d01.length) !== null && _a !== void 0 ? _a : 0;\n  var len02 = (_b = d02 === null || d02 === void 0 ? void 0 : d02.length) !== null && _b !== void 0 ? _b : 0;\n  var moreDigits = len01 > len02;\n  return moreDigits;\n};\nvar dynamicNumberMask = function (value) {\n  var masks = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    masks[_i - 1] = arguments[_i];\n  }\n  var currentMask = null;\n  for (var _a = 0, masks_1 = masks; _a < masks_1.length; _a++) {\n    var mask_1 = masks_1[_a];\n    if (!hasMoreDigits(value, mask_1)) {\n      return mask_1;\n    }\n    currentMask = mask_1;\n  }\n  return currentMask !== null && currentMask !== void 0 ? currentMask : '';\n};\nexport var createDynamicNumberMaskGenerator = function () {\n  var masks = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    masks[_i] = arguments[_i];\n  }\n  return {\n    rules: DEFAULT_MASK_RULES,\n    generateMask: function (v) {\n      return dynamicNumberMask.apply(void 0, __spreadArray([v], masks, false));\n    }\n  };\n};\nexport var getCurrencyMaskGenerator = function (_a) {\n  var _b = _a.prefix,\n    prefix = _b === void 0 ? '' : _b,\n    _c = _a.thousandSeparator,\n    thousandSeparator = _c === void 0 ? '' : _c,\n    _d = _a.centsSeparator,\n    centsSeparator = _d === void 0 ? '' : _d;\n  var getRawValue = function (value) {\n    var _a;\n    return (_a = value === null || value === void 0 ? void 0 : value.replace(/\\D/g, '')) !== null && _a !== void 0 ? _a : '';\n  };\n  return {\n    rules: DEFAULT_MASK_RULES,\n    generateMask: function (value) {\n      var rawVal = getRawValue(value);\n      var len = rawVal.length;\n      var lenCents = centsSeparator ? Math.min(2, Math.max(len - 1, 0)) : 0;\n      var lenNoCents = Math.max(len - lenCents, 0);\n      var mask = prefix + '9'.repeat(lenNoCents % 3) + (lenNoCents % 3 > 0 && lenNoCents >= 3 ? thousandSeparator : '') + (lenNoCents >= 3 ? Array(Math.trunc(lenNoCents / 3)).fill('999').join(thousandSeparator) : '') + (lenCents ? centsSeparator : '') + '9'.repeat(lenCents);\n      return mask;\n    },\n    transform: function (value) {\n      var _a;\n      var valDigits = getRawValue(value);\n      var rawVal = valDigits === null || valDigits === void 0 ? void 0 : valDigits.replace(/^0+/, '');\n      var len = rawVal.length;\n      var prefixToUse = (value === null || value === void 0 ? void 0 : value.startsWith(prefix)) ? prefix : '';\n      if (((_a = valDigits === null || valDigits === void 0 ? void 0 : valDigits.length) !== null && _a !== void 0 ? _a : 0) === 0) {\n        return value;\n      } else if (centsSeparator && len < 3) {\n        return prefixToUse + '0' + centsSeparator + '0'.repeat(2 - len) + rawVal;\n      } else if ((valDigits === null || valDigits === void 0 ? void 0 : valDigits.length) !== (rawVal === null || rawVal === void 0 ? void 0 : rawVal.length)) {\n        var initial = {\n          current: '',\n          parts: []\n        };\n        var thousandsParts = rawVal.substring(0, len - 2).split('').reverse().reduce(function (_a, char, idx, arr) {\n          var current = _a.current,\n            parts = _a.parts;\n          var newCurrent = char + current;\n          if (idx === (arr === null || arr === void 0 ? void 0 : arr.length) - 1 || (idx + 1) % 3 === 0) {\n            return {\n              current: '',\n              parts: __spreadArray([newCurrent], parts, true)\n            };\n          }\n          return {\n            current: newCurrent,\n            parts: parts\n          };\n        }, initial).parts;\n        var valNoCents = thousandsParts.join(thousandSeparator);\n        var newValue = prefixToUse + valNoCents + centsSeparator + rawVal.substring(len - 2);\n        return newValue;\n      }\n      return value;\n    }\n  };\n};","map":{"version":3,"names":["MaskFunctions","DEFAULT_MASK_RULES","Map","mask","value","maskGenerator","_a","_b","maskedValue","createDefaultMaskGenerator","rules","generateMask","onlyDigits","replace","hasMoreDigits","v01","v02","d01","d02","len01","length","len02","moreDigits","dynamicNumberMask","masks","_i","arguments","currentMask","masks_1","mask_1","createDynamicNumberMaskGenerator","v","apply","__spreadArray","getCurrencyMaskGenerator","prefix","_c","thousandSeparator","_d","centsSeparator","getRawValue","rawVal","len","lenCents","Math","min","max","lenNoCents","repeat","Array","trunc","fill","join","transform","valDigits","prefixToUse","startsWith","initial","current","parts","thousandsParts","substring","split","reverse","reduce","char","idx","arr","newCurrent","valNoCents","newValue"],"sources":["../../../src/utils/mask-util.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}